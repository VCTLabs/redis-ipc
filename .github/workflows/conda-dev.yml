name: CondaDev

on:
  workflow_dispatch:
  push:
    branches:
      - master
      - develop
  pull_request:

jobs:
  build:
    name: redis-ipc ${{ matrix.python-version }} ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash -l {0}
    strategy:
      fail-fast: false
      matrix:
        os: ['ubuntu-18.04', 'ubuntu-20.04']
        python-version: ['3.7', '3.9']
        include:
          - os: 'ubuntu-18.04'
            generator: 'Unix Makefiles'
            build_type: 'RelWithDebInfo'
          - os: 'ubuntu-20.04'
            generator: 'Unix Makefiles'
            build_type: 'RelWithDebInfo'
          #- os: 'macos-latest'
            #generator: 'Unix Makefiles'
            #build_type: 'RelWithDebInfo'

    steps:
    - uses: actions/checkout@v2

      - name: Cache conda
        uses: actions/cache@v2
        env:
          # Increase this value to reset cache if environment.devenv.yml has not changed
          CACHE_NUMBER: 2
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{ hashFiles('environment.devenv.yml') }}

    - uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
        channels: conda-forge
        channel-priority: strict
        use-only-tar-bz2: true

    - name: Configure Conda Environment
      shell: bash -l {0}
      env:
        PY_VER: ${{ matrix.python-version }}
      run: |
        conda config --set always_yes yes --set changeps1 no
        conda config --add channels conda-forge
        conda install conda-devenv
        conda devenv

    - name: Build and test
      shell: bash -l {0}
      env:
        PY_VER: ${{ matrix.python-version }}
      run: >-
        source activate redis-ipc
        && ctest --build-config "${{ matrix.build_type }}"
          --build-generator "${{ matrix.generator }}"
          --build-and-test . build
          --build-options -DRIPC_DISABLE_SOCK_TESTS=1
          --test-command ctest -V
          --build-config "${{ matrix.build_type }}"
        && gcovr -s -b build/
