name: Runtime

on:
  workflow_dispatch:
  push:
    branches: [ master, develop ]
  pull_request:
    branches: [ master, develop ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    defaults:
      run:
        shell: bash

    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-20.04]

    steps:
    - uses: actions/checkout@v2

    - name: Set platform server (socket) dir
      id: set_temp_dirs
      run: |
        MKTEMP=$(mktemp -d)
        echo "Platform temp dir is: ${MKTEMP}"
        echo "GH CI temp dir is: ${RUNNER_TEMP}"
        if [ "${ImageOS}" != "ubuntu18" ]
        then
            TEMP_DIR="${MKTEMP}"
        else
            TEMP_DIR="${RUNNER_TEMP}"
        fi
        echo "Setting runtime dir: ${TEMP_DIR}"
        echo "TEMP_DIR=${TEMP_DIR}" >> $GITHUB_ENV
        bash -c set

    # we split the deps for ubunti json-c versions:
    #   bionic has json-c = 0.12 but focal
    #   has a broken 0.13 so we use 0.15 instead
    - name: Upstream
      if: matrix.os == 'ubuntu-18.04'
      run: |
        sudo apt-get -qq update
        sudo apt-get install -y cmake libjson-c-dev

    - name: Common dependencies
      run: >
        sudo apt-get install -y
        libhiredis-dev
        redis-server
        autoconf
        automake
        gcovr
        lcov

    - name: Backports
      if: matrix.os == 'ubuntu-20.04'
      run: |
        sudo apt-get -qq update
        sudo apt-get install -y software-properties-common
        sudo add-apt-repository -y -s ppa:nerdboy/embedded
        sudo apt-get install -y libjson-c-dev

    - name: Configure and build (autotools)
      if: matrix.os == 'ubuntu-20.04'
      run: |
        autoreconf -fiv
        ./configure --with-coverage
        make cov || true

    - name: Configure and build (cmake)
      if: matrix.os == 'ubuntu-18.04'
      run: |
        cmake -S . -B build -DWITH_COVERAGE=1 -DCMAKE_BUILD_TYPE=Debug
        cmake --build build -j 2

    - name: Message bus
      env:
        RIPC_RUNTIME_DIR: "${{ env.TEMP_DIR }}"
      run: |
        ./scripts/run_redis.sh start

    - name: Test (autotools)
      if: matrix.os == 'ubuntu-20.04'
      env:
        RIPC_SERVER_PATH: "${{ env.TEMP_DIR }}/socket"
      run: |
        make cov
        gcovr -s -b src/.libs/ test/

    - name: Test (ctest)
      if: matrix.os == 'ubuntu-18.04'
      env:
        RIPC_SERVER_PATH: "${{ env.TEMP_DIR }}/socket"
      run: |
        ctest -V --test-dir build/
        gcovr -s -b build/

    - name: Cleanup
      env:
        RIPC_RUNTIME_DIR: "${{ env.TEMP_DIR }}"
      run: |
        ./scripts/run_redis.sh stop
